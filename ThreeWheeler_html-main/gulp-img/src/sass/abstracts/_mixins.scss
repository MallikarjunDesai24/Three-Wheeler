//Piyush-WebUI

// Border-radius
@mixin radius($border-radius) {
    border-radius: $border-radius;
    -webkit-border-radius: $border-radius;
    -ms-border-radius: $border-radius;
    -moz-border-radius: $border-radius;
}

// Box-shadow
@mixin shadow ($box-shadow) {
    box-shadow: $box-shadow;
    -webkit-box-shadow: $box-shadow;
    -ms-box-shadow: $box-shadow;
    -moz-box-shadow: $box-shadow;
} 

// Transition
@mixin transition($transition) {
    transition: $transition;
    -webkit-transition: $transition;
    -moz-transition: $transition;
    -ms-transition: $transition;
}

// Transform
@mixin transform($transform) {
    transform: $transform;
    -webkit-transform: $transform;
    -moz-transform: $transform;
    -ms-transform: $transform;
}

// rotate
@mixin rotate($deg) {
  @include transform(rotate(#{$deg}deg));
}
 
// scale
@mixin scale($scale) {
	 @include transform(scale($scale));
} 

// translate
@mixin translate ($x, $y) {
   @include transform(translate($x, $y));
}

// skew
@mixin skew ($x, $y) {
   @include transform(skew(#{$x}deg, #{$y}deg));
}

// Font Styles
@mixin font($size: false, $weight: false, $text-color: false) {
    @if $size { 
        font-size:$size;
        line-height:$size + .4rem;
    }
    @if $weight { 
        font-weight:$weight;
    }
    @if $text-color { 
        color:$text-color;
    }
}

// Square Ratio
@mixin square($size) {
  height:$size;
  width:$size;
}

// Media Query
// Media Breakpoints

$sm-min:576px;
$md-min:768px;
$lg-min:992px;
$xlg-min:1200px;
$xxl-min:1201px;
$xs:575.98px;
$sm:767.98px;
$md:991.98px;
$lg:1199.98px;
$xl-max:1201px;
$lg-md:1600px;
$lg-md-min:1601px;

@mixin bp($point) {
    @if $point == sm-min {
      @media screen and (min-width:$sm-min) { @content; }
    }
    @else if $point == md-min {
        @media screen and (min-width:$md-min) { @content; }
    }
    @else if $point == lg-min {
        @media screen and (min-width:$lg-min) { @content; }
    }
    @else if $point == xlg-min {
        @media screen and (min-width:$xlg-min) { @content; }
    }   
    @else if $point == xxl-min {
      @media screen and (min-width:$xxl-min) { @content; }
    }
    @else if $point == lg-md-min {
      @media screen and (min-width:$lg-md-min) { @content; }
    }
    @else if $point == xs {
        @media screen and (max-width:$xs) { @content; }
    }
    @else if $point == sm {
        @media screen and (max-width:$sm) { @content; }
    }
    @else if $point == md {
        @media screen and (max-width:$md) { @content; }
    }
    @else if $point == lg {
        @media screen and (max-width:$lg) { @content; }
    }
    @else if $point == xl-max {
      @media screen and (max-width:$xl-max) { @content; }
    }
    @else if $point == lg-md {
      @media screen and (max-width:$lg-md) { @content; }
  }
  }


// Background Image 
@mixin bg-img($path: false, $bg-position: false, $bg-size: false, $bg-repeat: false) {
    @if $path { 
        background-image:$path;
        background-repeat:no-repeat;
    }
    @if $bg-position { 
        background-position:$bg-position;
    }
    @if $bg-size { 
        background-size:$bg-size;
    }
    @if $bg-repeat { 
        background-repeat:$bg-repeat;
    }
}



// Gradient background

@mixin gradient($start-color, $end-color, $orientation, $text-color: false) {
  background: $start-color;
  color:$text-color;
  @if $orientation == 'vertical' {
    background: -webkit-linear-gradient(top, $start-color, $end-color);
    background: linear-gradient(to bottom, $start-color, $end-color);
  } @else if $orientation == 'horizontal' {
    background: -webkit-linear-gradient(left, $start-color, $end-color);
    background: linear-gradient(to right, $start-color, $end-color);
  } @else {
    background: -webkit-radial-gradient(center, ellipse cover, $start-color, $end-color);
    background: radial-gradient(ellipse at center, $start-color, $end-color);
  } 
}

// gradient text

@mixin gradient-text($start-color, $end-color){
    background: -webkit-linear-gradient($start-color, $end-color);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
} 
// Flex Width //
@mixin flex-width($value){
  -ms-flex: 0 0 $value;
  flex: 0 0 $value;
  max-width: $value;
}
@mixin keyframes($animationName) {
    @-webkit-keyframes #{$animationName} {
      @content;
    }
    @-moz-keyframes #{$animationName} {
      @content;
    }
    @-o-keyframes #{$animationName} {
      @content;
    }
    @keyframes #{$animationName} {
      @content;
    }
  }

@mixin animation ($animation-value) {
    animation: $animation-value;
    -moz-animation: $animation-value;
    -webkit-animation: $animation-value;
    -ms-animation: $animation-value;
    -o-animation: $animation-value;
}
